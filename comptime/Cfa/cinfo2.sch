;; ==========================================================
;; Class accessors
;; Bigloo (3.7b)
;; Inria -- Sophia Antipolis     Mon Nov 14 16:42:36 CET 2011 
;; (bigloo.new -classgen Cfa/cinfo2.scm)
;; ==========================================================

;; The directives
(directives

;; pre-arithmetic-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-arithmetic-app::pre-arithmetic-app loc1687::obj type1688::type side-effect1689::obj key1690::obj fun1691::var args1692::obj spec-types1693::pair)
    (inline pre-arithmetic-app?::bool ::obj)
    (pre-arithmetic-app-nil::pre-arithmetic-app)
    (inline pre-arithmetic-app-spec-types::pair ::pre-arithmetic-app)
    (inline pre-arithmetic-app-args::obj ::pre-arithmetic-app)
    (inline pre-arithmetic-app-args-set! ::pre-arithmetic-app ::obj)
    (inline pre-arithmetic-app-fun::var ::pre-arithmetic-app)
    (inline pre-arithmetic-app-fun-set! ::pre-arithmetic-app ::var)
    (inline pre-arithmetic-app-key::obj ::pre-arithmetic-app)
    (inline pre-arithmetic-app-key-set! ::pre-arithmetic-app ::obj)
    (inline pre-arithmetic-app-side-effect::obj ::pre-arithmetic-app)
    (inline pre-arithmetic-app-side-effect-set! ::pre-arithmetic-app ::obj)
    (inline pre-arithmetic-app-type::type ::pre-arithmetic-app)
    (inline pre-arithmetic-app-type-set! ::pre-arithmetic-app ::type)
    (inline pre-arithmetic-app-loc::obj ::pre-arithmetic-app))))

;; arithmetic-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-arithmetic-app::arithmetic-app loc1678::obj type1679::type side-effect1680::obj key1681::obj fun1682::var args1683::obj approx1684::approx spec-types1685::pair)
    (inline arithmetic-app?::bool ::obj)
    (arithmetic-app-nil::arithmetic-app)
    (inline arithmetic-app-spec-types::pair ::arithmetic-app)
    (inline arithmetic-app-approx::approx ::arithmetic-app)
    (inline arithmetic-app-args::obj ::arithmetic-app)
    (inline arithmetic-app-args-set! ::arithmetic-app ::obj)
    (inline arithmetic-app-fun::var ::arithmetic-app)
    (inline arithmetic-app-fun-set! ::arithmetic-app ::var)
    (inline arithmetic-app-key::obj ::arithmetic-app)
    (inline arithmetic-app-key-set! ::arithmetic-app ::obj)
    (inline arithmetic-app-side-effect::obj ::arithmetic-app)
    (inline arithmetic-app-side-effect-set! ::arithmetic-app ::obj)
    (inline arithmetic-app-type::type ::arithmetic-app)
    (inline arithmetic-app-type-set! ::arithmetic-app ::type)
    (inline arithmetic-app-loc::obj ::arithmetic-app))))

;; pre-make-procedure-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-make-procedure-app::pre-make-procedure-app loc1670::obj type1671::type side-effect1672::obj key1673::obj fun1674::var args1675::obj owner1676::variable)
    (inline pre-make-procedure-app?::bool ::obj)
    (pre-make-procedure-app-nil::pre-make-procedure-app)
    (inline pre-make-procedure-app-owner::variable ::pre-make-procedure-app)
    (inline pre-make-procedure-app-args::obj ::pre-make-procedure-app)
    (inline pre-make-procedure-app-args-set! ::pre-make-procedure-app ::obj)
    (inline pre-make-procedure-app-fun::var ::pre-make-procedure-app)
    (inline pre-make-procedure-app-fun-set! ::pre-make-procedure-app ::var)
    (inline pre-make-procedure-app-key::obj ::pre-make-procedure-app)
    (inline pre-make-procedure-app-key-set! ::pre-make-procedure-app ::obj)
    (inline pre-make-procedure-app-side-effect::obj ::pre-make-procedure-app)
    (inline pre-make-procedure-app-side-effect-set! ::pre-make-procedure-app ::obj)
    (inline pre-make-procedure-app-type::type ::pre-make-procedure-app)
    (inline pre-make-procedure-app-type-set! ::pre-make-procedure-app ::type)
    (inline pre-make-procedure-app-loc::obj ::pre-make-procedure-app))))

;; pre-procedure-ref-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-procedure-ref-app::pre-procedure-ref-app loc1663::obj type1664::type side-effect1665::obj key1666::obj fun1667::var args1668::obj)
    (inline pre-procedure-ref-app?::bool ::obj)
    (pre-procedure-ref-app-nil::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-args::obj ::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-args-set! ::pre-procedure-ref-app ::obj)
    (inline pre-procedure-ref-app-fun::var ::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-fun-set! ::pre-procedure-ref-app ::var)
    (inline pre-procedure-ref-app-key::obj ::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-key-set! ::pre-procedure-ref-app ::obj)
    (inline pre-procedure-ref-app-side-effect::obj ::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-side-effect-set! ::pre-procedure-ref-app ::obj)
    (inline pre-procedure-ref-app-type::type ::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-type-set! ::pre-procedure-ref-app ::type)
    (inline pre-procedure-ref-app-loc::obj ::pre-procedure-ref-app))))

;; pre-procedure-set!-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-procedure-set!-app::pre-procedure-set!-app loc1653::obj type1656::type side-effect1657::obj key1658::obj fun1659::var args1660::obj)
    (inline pre-procedure-set!-app?::bool ::obj)
    (pre-procedure-set!-app-nil::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-args::obj ::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-args-set! ::pre-procedure-set!-app ::obj)
    (inline pre-procedure-set!-app-fun::var ::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-fun-set! ::pre-procedure-set!-app ::var)
    (inline pre-procedure-set!-app-key::obj ::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-key-set! ::pre-procedure-set!-app ::obj)
    (inline pre-procedure-set!-app-side-effect::obj ::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-side-effect-set! ::pre-procedure-set!-app ::obj)
    (inline pre-procedure-set!-app-type::type ::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-type-set! ::pre-procedure-set!-app ::type)
    (inline pre-procedure-set!-app-loc::obj ::pre-procedure-set!-app))))

;; make-procedure-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-make-procedure-app::make-procedure-app loc1637::obj type1638::type side-effect1639::obj key1640::obj fun1641::var args1642::obj approx1643::approx values-approx1644::vector lost-stamp1645::long X-T?1646::bool X1647::bool T1648::bool owner1649::variable stack-stamp1650::obj)
    (inline make-procedure-app?::bool ::obj)
    (make-procedure-app-nil::make-procedure-app)
    (inline make-procedure-app-stack-stamp::obj ::make-procedure-app)
    (inline make-procedure-app-stack-stamp-set! ::make-procedure-app ::obj)
    (inline make-procedure-app-owner::variable ::make-procedure-app)
    (inline make-procedure-app-T::bool ::make-procedure-app)
    (inline make-procedure-app-T-set! ::make-procedure-app ::bool)
    (inline make-procedure-app-X::bool ::make-procedure-app)
    (inline make-procedure-app-X-set! ::make-procedure-app ::bool)
    (inline make-procedure-app-X-T?::bool ::make-procedure-app)
    (inline make-procedure-app-X-T?-set! ::make-procedure-app ::bool)
    (inline make-procedure-app-lost-stamp::long ::make-procedure-app)
    (inline make-procedure-app-lost-stamp-set! ::make-procedure-app ::long)
    (inline make-procedure-app-values-approx::vector ::make-procedure-app)
    (inline make-procedure-app-values-approx-set! ::make-procedure-app ::vector)
    (inline make-procedure-app-approx::approx ::make-procedure-app)
    (inline make-procedure-app-approx-set! ::make-procedure-app ::approx)
    (inline make-procedure-app-args::obj ::make-procedure-app)
    (inline make-procedure-app-args-set! ::make-procedure-app ::obj)
    (inline make-procedure-app-fun::var ::make-procedure-app)
    (inline make-procedure-app-fun-set! ::make-procedure-app ::var)
    (inline make-procedure-app-key::obj ::make-procedure-app)
    (inline make-procedure-app-key-set! ::make-procedure-app ::obj)
    (inline make-procedure-app-side-effect::obj ::make-procedure-app)
    (inline make-procedure-app-side-effect-set! ::make-procedure-app ::obj)
    (inline make-procedure-app-type::type ::make-procedure-app)
    (inline make-procedure-app-type-set! ::make-procedure-app ::type)
    (inline make-procedure-app-loc::obj ::make-procedure-app))))

;; procedure-ref-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-procedure-ref-app::procedure-ref-app loc1629::obj type1630::type side-effect1631::obj key1632::obj fun1633::var args1634::obj approx1635::approx)
    (inline procedure-ref-app?::bool ::obj)
    (procedure-ref-app-nil::procedure-ref-app)
    (inline procedure-ref-app-approx::approx ::procedure-ref-app)
    (inline procedure-ref-app-args::obj ::procedure-ref-app)
    (inline procedure-ref-app-args-set! ::procedure-ref-app ::obj)
    (inline procedure-ref-app-fun::var ::procedure-ref-app)
    (inline procedure-ref-app-fun-set! ::procedure-ref-app ::var)
    (inline procedure-ref-app-key::obj ::procedure-ref-app)
    (inline procedure-ref-app-key-set! ::procedure-ref-app ::obj)
    (inline procedure-ref-app-side-effect::obj ::procedure-ref-app)
    (inline procedure-ref-app-side-effect-set! ::procedure-ref-app ::obj)
    (inline procedure-ref-app-type::type ::procedure-ref-app)
    (inline procedure-ref-app-type-set! ::procedure-ref-app ::type)
    (inline procedure-ref-app-loc::obj ::procedure-ref-app))))

;; procedure-set!-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-procedure-set!-app::procedure-set!-app loc1620::obj type1621::type side-effect1622::obj key1623::obj fun1624::var args1625::obj approx1626::approx vapprox1627::obj)
    (inline procedure-set!-app?::bool ::obj)
    (procedure-set!-app-nil::procedure-set!-app)
    (inline procedure-set!-app-vapprox::obj ::procedure-set!-app)
    (inline procedure-set!-app-vapprox-set! ::procedure-set!-app ::obj)
    (inline procedure-set!-app-approx::approx ::procedure-set!-app)
    (inline procedure-set!-app-args::obj ::procedure-set!-app)
    (inline procedure-set!-app-args-set! ::procedure-set!-app ::obj)
    (inline procedure-set!-app-fun::var ::procedure-set!-app)
    (inline procedure-set!-app-fun-set! ::procedure-set!-app ::var)
    (inline procedure-set!-app-key::obj ::procedure-set!-app)
    (inline procedure-set!-app-key-set! ::procedure-set!-app ::obj)
    (inline procedure-set!-app-side-effect::obj ::procedure-set!-app)
    (inline procedure-set!-app-side-effect-set! ::procedure-set!-app ::obj)
    (inline procedure-set!-app-type::type ::procedure-set!-app)
    (inline procedure-set!-app-type-set! ::procedure-set!-app ::type)
    (inline procedure-set!-app-loc::obj ::procedure-set!-app))))

;; pre-make-vector-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-make-vector-app::pre-make-vector-app loc1611::obj type1612::type side-effect1613::obj key1614::obj fun1615::var args1616::obj owner1617::variable)
    (inline pre-make-vector-app?::bool ::obj)
    (pre-make-vector-app-nil::pre-make-vector-app)
    (inline pre-make-vector-app-owner::variable ::pre-make-vector-app)
    (inline pre-make-vector-app-args::obj ::pre-make-vector-app)
    (inline pre-make-vector-app-args-set! ::pre-make-vector-app ::obj)
    (inline pre-make-vector-app-fun::var ::pre-make-vector-app)
    (inline pre-make-vector-app-fun-set! ::pre-make-vector-app ::var)
    (inline pre-make-vector-app-key::obj ::pre-make-vector-app)
    (inline pre-make-vector-app-key-set! ::pre-make-vector-app ::obj)
    (inline pre-make-vector-app-side-effect::obj ::pre-make-vector-app)
    (inline pre-make-vector-app-side-effect-set! ::pre-make-vector-app ::obj)
    (inline pre-make-vector-app-type::type ::pre-make-vector-app)
    (inline pre-make-vector-app-type-set! ::pre-make-vector-app ::type)
    (inline pre-make-vector-app-loc::obj ::pre-make-vector-app))))

;; make-vector-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-make-vector-app::make-vector-app loc1598::obj type1599::type side-effect1600::obj key1601::obj fun1602::var args1603::obj approx1604::approx value-approx1605::approx lost-stamp1606::long owner1607::variable stack-stamp1608::obj seen?1609::bool)
    (inline make-vector-app?::bool ::obj)
    (make-vector-app-nil::make-vector-app)
    (inline make-vector-app-seen?::bool ::make-vector-app)
    (inline make-vector-app-seen?-set! ::make-vector-app ::bool)
    (inline make-vector-app-stack-stamp::obj ::make-vector-app)
    (inline make-vector-app-stack-stamp-set! ::make-vector-app ::obj)
    (inline make-vector-app-owner::variable ::make-vector-app)
    (inline make-vector-app-lost-stamp::long ::make-vector-app)
    (inline make-vector-app-lost-stamp-set! ::make-vector-app ::long)
    (inline make-vector-app-value-approx::approx ::make-vector-app)
    (inline make-vector-app-approx::approx ::make-vector-app)
    (inline make-vector-app-approx-set! ::make-vector-app ::approx)
    (inline make-vector-app-args::obj ::make-vector-app)
    (inline make-vector-app-args-set! ::make-vector-app ::obj)
    (inline make-vector-app-fun::var ::make-vector-app)
    (inline make-vector-app-fun-set! ::make-vector-app ::var)
    (inline make-vector-app-key::obj ::make-vector-app)
    (inline make-vector-app-key-set! ::make-vector-app ::obj)
    (inline make-vector-app-side-effect::obj ::make-vector-app)
    (inline make-vector-app-side-effect-set! ::make-vector-app ::obj)
    (inline make-vector-app-type::type ::make-vector-app)
    (inline make-vector-app-type-set! ::make-vector-app ::type)
    (inline make-vector-app-loc::obj ::make-vector-app))))

;; pre-cons-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-cons-app::pre-cons-app loc1589::obj type1590::type side-effect1591::obj key1592::obj fun1593::var args1594::obj owner1595::variable)
    (inline pre-cons-app?::bool ::obj)
    (pre-cons-app-nil::pre-cons-app)
    (inline pre-cons-app-owner::variable ::pre-cons-app)
    (inline pre-cons-app-args::obj ::pre-cons-app)
    (inline pre-cons-app-args-set! ::pre-cons-app ::obj)
    (inline pre-cons-app-fun::var ::pre-cons-app)
    (inline pre-cons-app-fun-set! ::pre-cons-app ::var)
    (inline pre-cons-app-key::obj ::pre-cons-app)
    (inline pre-cons-app-key-set! ::pre-cons-app ::obj)
    (inline pre-cons-app-side-effect::obj ::pre-cons-app)
    (inline pre-cons-app-side-effect-set! ::pre-cons-app ::obj)
    (inline pre-cons-app-type::type ::pre-cons-app)
    (inline pre-cons-app-type-set! ::pre-cons-app ::type)
    (inline pre-cons-app-loc::obj ::pre-cons-app))))

;; pre-cons-ref-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-cons-ref-app::pre-cons-ref-app loc1581::obj type1582::type side-effect1583::obj key1584::obj fun1585::var args1586::obj get1587::procedure)
    (inline pre-cons-ref-app?::bool ::obj)
    (pre-cons-ref-app-nil::pre-cons-ref-app)
    (inline pre-cons-ref-app-get::procedure ::pre-cons-ref-app)
    (inline pre-cons-ref-app-args::obj ::pre-cons-ref-app)
    (inline pre-cons-ref-app-args-set! ::pre-cons-ref-app ::obj)
    (inline pre-cons-ref-app-fun::var ::pre-cons-ref-app)
    (inline pre-cons-ref-app-fun-set! ::pre-cons-ref-app ::var)
    (inline pre-cons-ref-app-key::obj ::pre-cons-ref-app)
    (inline pre-cons-ref-app-key-set! ::pre-cons-ref-app ::obj)
    (inline pre-cons-ref-app-side-effect::obj ::pre-cons-ref-app)
    (inline pre-cons-ref-app-side-effect-set! ::pre-cons-ref-app ::obj)
    (inline pre-cons-ref-app-type::type ::pre-cons-ref-app)
    (inline pre-cons-ref-app-type-set! ::pre-cons-ref-app ::type)
    (inline pre-cons-ref-app-loc::obj ::pre-cons-ref-app))))

;; pre-cons-set!-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-cons-set!-app::pre-cons-set!-app loc1571::obj type1572::type side-effect1573::obj key1574::obj fun1576::var args1577::obj get1578::procedure)
    (inline pre-cons-set!-app?::bool ::obj)
    (pre-cons-set!-app-nil::pre-cons-set!-app)
    (inline pre-cons-set!-app-get::procedure ::pre-cons-set!-app)
    (inline pre-cons-set!-app-args::obj ::pre-cons-set!-app)
    (inline pre-cons-set!-app-args-set! ::pre-cons-set!-app ::obj)
    (inline pre-cons-set!-app-fun::var ::pre-cons-set!-app)
    (inline pre-cons-set!-app-fun-set! ::pre-cons-set!-app ::var)
    (inline pre-cons-set!-app-key::obj ::pre-cons-set!-app)
    (inline pre-cons-set!-app-key-set! ::pre-cons-set!-app ::obj)
    (inline pre-cons-set!-app-side-effect::obj ::pre-cons-set!-app)
    (inline pre-cons-set!-app-side-effect-set! ::pre-cons-set!-app ::obj)
    (inline pre-cons-set!-app-type::type ::pre-cons-set!-app)
    (inline pre-cons-set!-app-type-set! ::pre-cons-set!-app ::type)
    (inline pre-cons-set!-app-loc::obj ::pre-cons-set!-app))))

;; cons-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-cons-app::cons-app loc1556::obj type1557::type side-effect1558::obj key1559::obj fun1560::var args1561::obj approx1562::approx approxes1563::pair lost-stamp1564::long owner1565::variable stack-stamp1566::obj seen?1567::bool)
    (inline cons-app?::bool ::obj)
    (cons-app-nil::cons-app)
    (inline cons-app-seen?::bool ::cons-app)
    (inline cons-app-seen?-set! ::cons-app ::bool)
    (inline cons-app-stack-stamp::obj ::cons-app)
    (inline cons-app-stack-stamp-set! ::cons-app ::obj)
    (inline cons-app-owner::variable ::cons-app)
    (inline cons-app-lost-stamp::long ::cons-app)
    (inline cons-app-lost-stamp-set! ::cons-app ::long)
    (inline cons-app-approxes::pair ::cons-app)
    (inline cons-app-approx::approx ::cons-app)
    (inline cons-app-approx-set! ::cons-app ::approx)
    (inline cons-app-args::obj ::cons-app)
    (inline cons-app-args-set! ::cons-app ::obj)
    (inline cons-app-fun::var ::cons-app)
    (inline cons-app-fun-set! ::cons-app ::var)
    (inline cons-app-key::obj ::cons-app)
    (inline cons-app-key-set! ::cons-app ::obj)
    (inline cons-app-side-effect::obj ::cons-app)
    (inline cons-app-side-effect-set! ::cons-app ::obj)
    (inline cons-app-type::type ::cons-app)
    (inline cons-app-type-set! ::cons-app ::type)
    (inline cons-app-loc::obj ::cons-app))))

;; cons-ref-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-cons-ref-app::cons-ref-app loc1547::obj type1548::type side-effect1549::obj key1550::obj fun1551::var args1552::obj approx1553::approx get1554::procedure)
    (inline cons-ref-app?::bool ::obj)
    (cons-ref-app-nil::cons-ref-app)
    (inline cons-ref-app-get::procedure ::cons-ref-app)
    (inline cons-ref-app-approx::approx ::cons-ref-app)
    (inline cons-ref-app-args::obj ::cons-ref-app)
    (inline cons-ref-app-args-set! ::cons-ref-app ::obj)
    (inline cons-ref-app-fun::var ::cons-ref-app)
    (inline cons-ref-app-fun-set! ::cons-ref-app ::var)
    (inline cons-ref-app-key::obj ::cons-ref-app)
    (inline cons-ref-app-key-set! ::cons-ref-app ::obj)
    (inline cons-ref-app-side-effect::obj ::cons-ref-app)
    (inline cons-ref-app-side-effect-set! ::cons-ref-app ::obj)
    (inline cons-ref-app-type::type ::cons-ref-app)
    (inline cons-ref-app-type-set! ::cons-ref-app ::type)
    (inline cons-ref-app-loc::obj ::cons-ref-app))))

;; cons-set!-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-cons-set!-app::cons-set!-app loc1537::obj type1538::type side-effect1539::obj key1540::obj fun1542::var args1543::obj approx1544::approx get1545::procedure)
    (inline cons-set!-app?::bool ::obj)
    (cons-set!-app-nil::cons-set!-app)
    (inline cons-set!-app-get::procedure ::cons-set!-app)
    (inline cons-set!-app-approx::approx ::cons-set!-app)
    (inline cons-set!-app-args::obj ::cons-set!-app)
    (inline cons-set!-app-args-set! ::cons-set!-app ::obj)
    (inline cons-set!-app-fun::var ::cons-set!-app)
    (inline cons-set!-app-fun-set! ::cons-set!-app ::var)
    (inline cons-set!-app-key::obj ::cons-set!-app)
    (inline cons-set!-app-key-set! ::cons-set!-app ::obj)
    (inline cons-set!-app-side-effect::obj ::cons-set!-app)
    (inline cons-set!-app-side-effect-set! ::cons-set!-app ::obj)
    (inline cons-set!-app-type::type ::cons-set!-app)
    (inline cons-set!-app-type-set! ::cons-set!-app ::type)
    (inline cons-set!-app-loc::obj ::cons-set!-app))))

;; pre-make-struct-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-make-struct-app::pre-make-struct-app loc1529::obj type1530::type side-effect1531::obj key1532::obj fun1533::var args1534::obj owner1535::variable)
    (inline pre-make-struct-app?::bool ::obj)
    (pre-make-struct-app-nil::pre-make-struct-app)
    (inline pre-make-struct-app-owner::variable ::pre-make-struct-app)
    (inline pre-make-struct-app-args::obj ::pre-make-struct-app)
    (inline pre-make-struct-app-args-set! ::pre-make-struct-app ::obj)
    (inline pre-make-struct-app-fun::var ::pre-make-struct-app)
    (inline pre-make-struct-app-fun-set! ::pre-make-struct-app ::var)
    (inline pre-make-struct-app-key::obj ::pre-make-struct-app)
    (inline pre-make-struct-app-key-set! ::pre-make-struct-app ::obj)
    (inline pre-make-struct-app-side-effect::obj ::pre-make-struct-app)
    (inline pre-make-struct-app-side-effect-set! ::pre-make-struct-app ::obj)
    (inline pre-make-struct-app-type::type ::pre-make-struct-app)
    (inline pre-make-struct-app-type-set! ::pre-make-struct-app ::type)
    (inline pre-make-struct-app-loc::obj ::pre-make-struct-app))))

;; pre-struct-ref-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-struct-ref-app::pre-struct-ref-app loc1521::obj type1522::type side-effect1523::obj key1524::obj fun1525::var args1526::obj)
    (inline pre-struct-ref-app?::bool ::obj)
    (pre-struct-ref-app-nil::pre-struct-ref-app)
    (inline pre-struct-ref-app-args::obj ::pre-struct-ref-app)
    (inline pre-struct-ref-app-args-set! ::pre-struct-ref-app ::obj)
    (inline pre-struct-ref-app-fun::var ::pre-struct-ref-app)
    (inline pre-struct-ref-app-fun-set! ::pre-struct-ref-app ::var)
    (inline pre-struct-ref-app-key::obj ::pre-struct-ref-app)
    (inline pre-struct-ref-app-key-set! ::pre-struct-ref-app ::obj)
    (inline pre-struct-ref-app-side-effect::obj ::pre-struct-ref-app)
    (inline pre-struct-ref-app-side-effect-set! ::pre-struct-ref-app ::obj)
    (inline pre-struct-ref-app-type::type ::pre-struct-ref-app)
    (inline pre-struct-ref-app-type-set! ::pre-struct-ref-app ::type)
    (inline pre-struct-ref-app-loc::obj ::pre-struct-ref-app))))

;; pre-struct-set!-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-struct-set!-app::pre-struct-set!-app loc1514::obj type1515::type side-effect1516::obj key1517::obj fun1518::var args1519::obj)
    (inline pre-struct-set!-app?::bool ::obj)
    (pre-struct-set!-app-nil::pre-struct-set!-app)
    (inline pre-struct-set!-app-args::obj ::pre-struct-set!-app)
    (inline pre-struct-set!-app-args-set! ::pre-struct-set!-app ::obj)
    (inline pre-struct-set!-app-fun::var ::pre-struct-set!-app)
    (inline pre-struct-set!-app-fun-set! ::pre-struct-set!-app ::var)
    (inline pre-struct-set!-app-key::obj ::pre-struct-set!-app)
    (inline pre-struct-set!-app-key-set! ::pre-struct-set!-app ::obj)
    (inline pre-struct-set!-app-side-effect::obj ::pre-struct-set!-app)
    (inline pre-struct-set!-app-side-effect-set! ::pre-struct-set!-app ::obj)
    (inline pre-struct-set!-app-type::type ::pre-struct-set!-app)
    (inline pre-struct-set!-app-type-set! ::pre-struct-set!-app ::type)
    (inline pre-struct-set!-app-loc::obj ::pre-struct-set!-app))))

;; make-struct-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-make-struct-app::make-struct-app loc1502::obj type1503::type side-effect1504::obj key1505::obj fun1506::var args1507::obj approx1508::approx value-approx1509::approx lost-stamp1510::long owner1511::variable stack-stamp1512::obj)
    (inline make-struct-app?::bool ::obj)
    (make-struct-app-nil::make-struct-app)
    (inline make-struct-app-stack-stamp::obj ::make-struct-app)
    (inline make-struct-app-stack-stamp-set! ::make-struct-app ::obj)
    (inline make-struct-app-owner::variable ::make-struct-app)
    (inline make-struct-app-lost-stamp::long ::make-struct-app)
    (inline make-struct-app-lost-stamp-set! ::make-struct-app ::long)
    (inline make-struct-app-value-approx::approx ::make-struct-app)
    (inline make-struct-app-approx::approx ::make-struct-app)
    (inline make-struct-app-approx-set! ::make-struct-app ::approx)
    (inline make-struct-app-args::obj ::make-struct-app)
    (inline make-struct-app-args-set! ::make-struct-app ::obj)
    (inline make-struct-app-fun::var ::make-struct-app)
    (inline make-struct-app-fun-set! ::make-struct-app ::var)
    (inline make-struct-app-key::obj ::make-struct-app)
    (inline make-struct-app-key-set! ::make-struct-app ::obj)
    (inline make-struct-app-side-effect::obj ::make-struct-app)
    (inline make-struct-app-side-effect-set! ::make-struct-app ::obj)
    (inline make-struct-app-type::type ::make-struct-app)
    (inline make-struct-app-type-set! ::make-struct-app ::type)
    (inline make-struct-app-loc::obj ::make-struct-app))))

;; struct-ref-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-struct-ref-app::struct-ref-app loc1494::obj type1495::type side-effect1496::obj key1497::obj fun1498::var args1499::obj approx1500::approx)
    (inline struct-ref-app?::bool ::obj)
    (struct-ref-app-nil::struct-ref-app)
    (inline struct-ref-app-approx::approx ::struct-ref-app)
    (inline struct-ref-app-args::obj ::struct-ref-app)
    (inline struct-ref-app-args-set! ::struct-ref-app ::obj)
    (inline struct-ref-app-fun::var ::struct-ref-app)
    (inline struct-ref-app-fun-set! ::struct-ref-app ::var)
    (inline struct-ref-app-key::obj ::struct-ref-app)
    (inline struct-ref-app-key-set! ::struct-ref-app ::obj)
    (inline struct-ref-app-side-effect::obj ::struct-ref-app)
    (inline struct-ref-app-side-effect-set! ::struct-ref-app ::obj)
    (inline struct-ref-app-type::type ::struct-ref-app)
    (inline struct-ref-app-type-set! ::struct-ref-app ::type)
    (inline struct-ref-app-loc::obj ::struct-ref-app))))

;; struct-set!-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-struct-set!-app::struct-set!-app loc1486::obj type1487::type side-effect1488::obj key1489::obj fun1490::var args1491::obj approx1492::approx)
    (inline struct-set!-app?::bool ::obj)
    (struct-set!-app-nil::struct-set!-app)
    (inline struct-set!-app-approx::approx ::struct-set!-app)
    (inline struct-set!-app-args::obj ::struct-set!-app)
    (inline struct-set!-app-args-set! ::struct-set!-app ::obj)
    (inline struct-set!-app-fun::var ::struct-set!-app)
    (inline struct-set!-app-fun-set! ::struct-set!-app ::var)
    (inline struct-set!-app-key::obj ::struct-set!-app)
    (inline struct-set!-app-key-set! ::struct-set!-app ::obj)
    (inline struct-set!-app-side-effect::obj ::struct-set!-app)
    (inline struct-set!-app-side-effect-set! ::struct-set!-app ::obj)
    (inline struct-set!-app-type::type ::struct-set!-app)
    (inline struct-set!-app-type-set! ::struct-set!-app ::type)
    (inline struct-set!-app-loc::obj ::struct-set!-app)))))

;; The definitions
(cond-expand (bigloo-class-sans
;; pre-arithmetic-app
(define-inline (make-pre-arithmetic-app::pre-arithmetic-app loc1687::obj type1688::type side-effect1689::obj key1690::obj fun1691::var args1692::obj spec-types1693::pair) (instantiate::pre-arithmetic-app (loc loc1687) (type type1688) (side-effect side-effect1689) (key key1690) (fun fun1691) (args args1692) (spec-types spec-types1693)))
(define-inline (pre-arithmetic-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-arithmetic-app cfa_info2)))
(define (pre-arithmetic-app-nil::pre-arithmetic-app) (class-nil (@ pre-arithmetic-app cfa_info2)))
(define-inline (pre-arithmetic-app-spec-types::pair o::pre-arithmetic-app) (with-access::pre-arithmetic-app o (spec-types) spec-types))
(define-inline (pre-arithmetic-app-spec-types-set! o::pre-arithmetic-app v::pair) (with-access::pre-arithmetic-app o (spec-types) (set! spec-types v)))
(define-inline (pre-arithmetic-app-args::obj o::pre-arithmetic-app) (with-access::pre-arithmetic-app o (args) args))
(define-inline (pre-arithmetic-app-args-set! o::pre-arithmetic-app v::obj) (with-access::pre-arithmetic-app o (args) (set! args v)))
(define-inline (pre-arithmetic-app-fun::var o::pre-arithmetic-app) (with-access::pre-arithmetic-app o (fun) fun))
(define-inline (pre-arithmetic-app-fun-set! o::pre-arithmetic-app v::var) (with-access::pre-arithmetic-app o (fun) (set! fun v)))
(define-inline (pre-arithmetic-app-key::obj o::pre-arithmetic-app) (with-access::pre-arithmetic-app o (key) key))
(define-inline (pre-arithmetic-app-key-set! o::pre-arithmetic-app v::obj) (with-access::pre-arithmetic-app o (key) (set! key v)))
(define-inline (pre-arithmetic-app-side-effect::obj o::pre-arithmetic-app) (with-access::pre-arithmetic-app o (side-effect) side-effect))
(define-inline (pre-arithmetic-app-side-effect-set! o::pre-arithmetic-app v::obj) (with-access::pre-arithmetic-app o (side-effect) (set! side-effect v)))
(define-inline (pre-arithmetic-app-type::type o::pre-arithmetic-app) (with-access::pre-arithmetic-app o (type) type))
(define-inline (pre-arithmetic-app-type-set! o::pre-arithmetic-app v::type) (with-access::pre-arithmetic-app o (type) (set! type v)))
(define-inline (pre-arithmetic-app-loc::obj o::pre-arithmetic-app) (with-access::pre-arithmetic-app o (loc) loc))
(define-inline (pre-arithmetic-app-loc-set! o::pre-arithmetic-app v::obj) (with-access::pre-arithmetic-app o (loc) (set! loc v)))

;; arithmetic-app
(define-inline (make-arithmetic-app::arithmetic-app loc1678::obj type1679::type side-effect1680::obj key1681::obj fun1682::var args1683::obj approx1684::approx spec-types1685::pair) (instantiate::arithmetic-app (loc loc1678) (type type1679) (side-effect side-effect1680) (key key1681) (fun fun1682) (args args1683) (approx approx1684) (spec-types spec-types1685)))
(define-inline (arithmetic-app?::bool obj::obj) ((@ isa? __object) obj (@ arithmetic-app cfa_info2)))
(define (arithmetic-app-nil::arithmetic-app) (class-nil (@ arithmetic-app cfa_info2)))
(define-inline (arithmetic-app-spec-types::pair o::arithmetic-app) (with-access::arithmetic-app o (spec-types) spec-types))
(define-inline (arithmetic-app-spec-types-set! o::arithmetic-app v::pair) (with-access::arithmetic-app o (spec-types) (set! spec-types v)))
(define-inline (arithmetic-app-approx::approx o::arithmetic-app) (with-access::arithmetic-app o (approx) approx))
(define-inline (arithmetic-app-approx-set! o::arithmetic-app v::approx) (with-access::arithmetic-app o (approx) (set! approx v)))
(define-inline (arithmetic-app-args::obj o::arithmetic-app) (with-access::arithmetic-app o (args) args))
(define-inline (arithmetic-app-args-set! o::arithmetic-app v::obj) (with-access::arithmetic-app o (args) (set! args v)))
(define-inline (arithmetic-app-fun::var o::arithmetic-app) (with-access::arithmetic-app o (fun) fun))
(define-inline (arithmetic-app-fun-set! o::arithmetic-app v::var) (with-access::arithmetic-app o (fun) (set! fun v)))
(define-inline (arithmetic-app-key::obj o::arithmetic-app) (with-access::arithmetic-app o (key) key))
(define-inline (arithmetic-app-key-set! o::arithmetic-app v::obj) (with-access::arithmetic-app o (key) (set! key v)))
(define-inline (arithmetic-app-side-effect::obj o::arithmetic-app) (with-access::arithmetic-app o (side-effect) side-effect))
(define-inline (arithmetic-app-side-effect-set! o::arithmetic-app v::obj) (with-access::arithmetic-app o (side-effect) (set! side-effect v)))
(define-inline (arithmetic-app-type::type o::arithmetic-app) (with-access::arithmetic-app o (type) type))
(define-inline (arithmetic-app-type-set! o::arithmetic-app v::type) (with-access::arithmetic-app o (type) (set! type v)))
(define-inline (arithmetic-app-loc::obj o::arithmetic-app) (with-access::arithmetic-app o (loc) loc))
(define-inline (arithmetic-app-loc-set! o::arithmetic-app v::obj) (with-access::arithmetic-app o (loc) (set! loc v)))

;; pre-make-procedure-app
(define-inline (make-pre-make-procedure-app::pre-make-procedure-app loc1670::obj type1671::type side-effect1672::obj key1673::obj fun1674::var args1675::obj owner1676::variable) (instantiate::pre-make-procedure-app (loc loc1670) (type type1671) (side-effect side-effect1672) (key key1673) (fun fun1674) (args args1675) (owner owner1676)))
(define-inline (pre-make-procedure-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-make-procedure-app cfa_info2)))
(define (pre-make-procedure-app-nil::pre-make-procedure-app) (class-nil (@ pre-make-procedure-app cfa_info2)))
(define-inline (pre-make-procedure-app-owner::variable o::pre-make-procedure-app) (with-access::pre-make-procedure-app o (owner) owner))
(define-inline (pre-make-procedure-app-owner-set! o::pre-make-procedure-app v::variable) (with-access::pre-make-procedure-app o (owner) (set! owner v)))
(define-inline (pre-make-procedure-app-args::obj o::pre-make-procedure-app) (with-access::pre-make-procedure-app o (args) args))
(define-inline (pre-make-procedure-app-args-set! o::pre-make-procedure-app v::obj) (with-access::pre-make-procedure-app o (args) (set! args v)))
(define-inline (pre-make-procedure-app-fun::var o::pre-make-procedure-app) (with-access::pre-make-procedure-app o (fun) fun))
(define-inline (pre-make-procedure-app-fun-set! o::pre-make-procedure-app v::var) (with-access::pre-make-procedure-app o (fun) (set! fun v)))
(define-inline (pre-make-procedure-app-key::obj o::pre-make-procedure-app) (with-access::pre-make-procedure-app o (key) key))
(define-inline (pre-make-procedure-app-key-set! o::pre-make-procedure-app v::obj) (with-access::pre-make-procedure-app o (key) (set! key v)))
(define-inline (pre-make-procedure-app-side-effect::obj o::pre-make-procedure-app) (with-access::pre-make-procedure-app o (side-effect) side-effect))
(define-inline (pre-make-procedure-app-side-effect-set! o::pre-make-procedure-app v::obj) (with-access::pre-make-procedure-app o (side-effect) (set! side-effect v)))
(define-inline (pre-make-procedure-app-type::type o::pre-make-procedure-app) (with-access::pre-make-procedure-app o (type) type))
(define-inline (pre-make-procedure-app-type-set! o::pre-make-procedure-app v::type) (with-access::pre-make-procedure-app o (type) (set! type v)))
(define-inline (pre-make-procedure-app-loc::obj o::pre-make-procedure-app) (with-access::pre-make-procedure-app o (loc) loc))
(define-inline (pre-make-procedure-app-loc-set! o::pre-make-procedure-app v::obj) (with-access::pre-make-procedure-app o (loc) (set! loc v)))

;; pre-procedure-ref-app
(define-inline (make-pre-procedure-ref-app::pre-procedure-ref-app loc1663::obj type1664::type side-effect1665::obj key1666::obj fun1667::var args1668::obj) (instantiate::pre-procedure-ref-app (loc loc1663) (type type1664) (side-effect side-effect1665) (key key1666) (fun fun1667) (args args1668)))
(define-inline (pre-procedure-ref-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-procedure-ref-app cfa_info2)))
(define (pre-procedure-ref-app-nil::pre-procedure-ref-app) (class-nil (@ pre-procedure-ref-app cfa_info2)))
(define-inline (pre-procedure-ref-app-args::obj o::pre-procedure-ref-app) (with-access::pre-procedure-ref-app o (args) args))
(define-inline (pre-procedure-ref-app-args-set! o::pre-procedure-ref-app v::obj) (with-access::pre-procedure-ref-app o (args) (set! args v)))
(define-inline (pre-procedure-ref-app-fun::var o::pre-procedure-ref-app) (with-access::pre-procedure-ref-app o (fun) fun))
(define-inline (pre-procedure-ref-app-fun-set! o::pre-procedure-ref-app v::var) (with-access::pre-procedure-ref-app o (fun) (set! fun v)))
(define-inline (pre-procedure-ref-app-key::obj o::pre-procedure-ref-app) (with-access::pre-procedure-ref-app o (key) key))
(define-inline (pre-procedure-ref-app-key-set! o::pre-procedure-ref-app v::obj) (with-access::pre-procedure-ref-app o (key) (set! key v)))
(define-inline (pre-procedure-ref-app-side-effect::obj o::pre-procedure-ref-app) (with-access::pre-procedure-ref-app o (side-effect) side-effect))
(define-inline (pre-procedure-ref-app-side-effect-set! o::pre-procedure-ref-app v::obj) (with-access::pre-procedure-ref-app o (side-effect) (set! side-effect v)))
(define-inline (pre-procedure-ref-app-type::type o::pre-procedure-ref-app) (with-access::pre-procedure-ref-app o (type) type))
(define-inline (pre-procedure-ref-app-type-set! o::pre-procedure-ref-app v::type) (with-access::pre-procedure-ref-app o (type) (set! type v)))
(define-inline (pre-procedure-ref-app-loc::obj o::pre-procedure-ref-app) (with-access::pre-procedure-ref-app o (loc) loc))
(define-inline (pre-procedure-ref-app-loc-set! o::pre-procedure-ref-app v::obj) (with-access::pre-procedure-ref-app o (loc) (set! loc v)))

;; pre-procedure-set!-app
(define-inline (make-pre-procedure-set!-app::pre-procedure-set!-app loc1653::obj type1656::type side-effect1657::obj key1658::obj fun1659::var args1660::obj) (instantiate::pre-procedure-set!-app (loc loc1653) (type type1656) (side-effect side-effect1657) (key key1658) (fun fun1659) (args args1660)))
(define-inline (pre-procedure-set!-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-procedure-set!-app cfa_info2)))
(define (pre-procedure-set!-app-nil::pre-procedure-set!-app) (class-nil (@ pre-procedure-set!-app cfa_info2)))
(define-inline (pre-procedure-set!-app-args::obj o::pre-procedure-set!-app) (with-access::pre-procedure-set!-app o (args) args))
(define-inline (pre-procedure-set!-app-args-set! o::pre-procedure-set!-app v::obj) (with-access::pre-procedure-set!-app o (args) (set! args v)))
(define-inline (pre-procedure-set!-app-fun::var o::pre-procedure-set!-app) (with-access::pre-procedure-set!-app o (fun) fun))
(define-inline (pre-procedure-set!-app-fun-set! o::pre-procedure-set!-app v::var) (with-access::pre-procedure-set!-app o (fun) (set! fun v)))
(define-inline (pre-procedure-set!-app-key::obj o::pre-procedure-set!-app) (with-access::pre-procedure-set!-app o (key) key))
(define-inline (pre-procedure-set!-app-key-set! o::pre-procedure-set!-app v::obj) (with-access::pre-procedure-set!-app o (key) (set! key v)))
(define-inline (pre-procedure-set!-app-side-effect::obj o::pre-procedure-set!-app) (with-access::pre-procedure-set!-app o (side-effect) side-effect))
(define-inline (pre-procedure-set!-app-side-effect-set! o::pre-procedure-set!-app v::obj) (with-access::pre-procedure-set!-app o (side-effect) (set! side-effect v)))
(define-inline (pre-procedure-set!-app-type::type o::pre-procedure-set!-app) (with-access::pre-procedure-set!-app o (type) type))
(define-inline (pre-procedure-set!-app-type-set! o::pre-procedure-set!-app v::type) (with-access::pre-procedure-set!-app o (type) (set! type v)))
(define-inline (pre-procedure-set!-app-loc::obj o::pre-procedure-set!-app) (with-access::pre-procedure-set!-app o (loc) loc))
(define-inline (pre-procedure-set!-app-loc-set! o::pre-procedure-set!-app v::obj) (with-access::pre-procedure-set!-app o (loc) (set! loc v)))

;; make-procedure-app
(define-inline (make-make-procedure-app::make-procedure-app loc1637::obj type1638::type side-effect1639::obj key1640::obj fun1641::var args1642::obj approx1643::approx values-approx1644::vector lost-stamp1645::long X-T?1646::bool X1647::bool T1648::bool owner1649::variable stack-stamp1650::obj) (instantiate::make-procedure-app (loc loc1637) (type type1638) (side-effect side-effect1639) (key key1640) (fun fun1641) (args args1642) (approx approx1643) (values-approx values-approx1644) (lost-stamp lost-stamp1645) (X-T? X-T?1646) (X X1647) (T T1648) (owner owner1649) (stack-stamp stack-stamp1650)))
(define-inline (make-procedure-app?::bool obj::obj) ((@ isa? __object) obj (@ make-procedure-app cfa_info2)))
(define (make-procedure-app-nil::make-procedure-app) (class-nil (@ make-procedure-app cfa_info2)))
(define-inline (make-procedure-app-stack-stamp::obj o::make-procedure-app) (with-access::make-procedure-app o (stack-stamp) stack-stamp))
(define-inline (make-procedure-app-stack-stamp-set! o::make-procedure-app v::obj) (with-access::make-procedure-app o (stack-stamp) (set! stack-stamp v)))
(define-inline (make-procedure-app-owner::variable o::make-procedure-app) (with-access::make-procedure-app o (owner) owner))
(define-inline (make-procedure-app-owner-set! o::make-procedure-app v::variable) (with-access::make-procedure-app o (owner) (set! owner v)))
(define-inline (make-procedure-app-T::bool o::make-procedure-app) (with-access::make-procedure-app o (T) T))
(define-inline (make-procedure-app-T-set! o::make-procedure-app v::bool) (with-access::make-procedure-app o (T) (set! T v)))
(define-inline (make-procedure-app-X::bool o::make-procedure-app) (with-access::make-procedure-app o (X) X))
(define-inline (make-procedure-app-X-set! o::make-procedure-app v::bool) (with-access::make-procedure-app o (X) (set! X v)))
(define-inline (make-procedure-app-X-T?::bool o::make-procedure-app) (with-access::make-procedure-app o (X-T?) X-T?))
(define-inline (make-procedure-app-X-T?-set! o::make-procedure-app v::bool) (with-access::make-procedure-app o (X-T?) (set! X-T? v)))
(define-inline (make-procedure-app-lost-stamp::long o::make-procedure-app) (with-access::make-procedure-app o (lost-stamp) lost-stamp))
(define-inline (make-procedure-app-lost-stamp-set! o::make-procedure-app v::long) (with-access::make-procedure-app o (lost-stamp) (set! lost-stamp v)))
(define-inline (make-procedure-app-values-approx::vector o::make-procedure-app) (with-access::make-procedure-app o (values-approx) values-approx))
(define-inline (make-procedure-app-values-approx-set! o::make-procedure-app v::vector) (with-access::make-procedure-app o (values-approx) (set! values-approx v)))
(define-inline (make-procedure-app-approx::approx o::make-procedure-app) (with-access::make-procedure-app o (approx) approx))
(define-inline (make-procedure-app-approx-set! o::make-procedure-app v::approx) (with-access::make-procedure-app o (approx) (set! approx v)))
(define-inline (make-procedure-app-args::obj o::make-procedure-app) (with-access::make-procedure-app o (args) args))
(define-inline (make-procedure-app-args-set! o::make-procedure-app v::obj) (with-access::make-procedure-app o (args) (set! args v)))
(define-inline (make-procedure-app-fun::var o::make-procedure-app) (with-access::make-procedure-app o (fun) fun))
(define-inline (make-procedure-app-fun-set! o::make-procedure-app v::var) (with-access::make-procedure-app o (fun) (set! fun v)))
(define-inline (make-procedure-app-key::obj o::make-procedure-app) (with-access::make-procedure-app o (key) key))
(define-inline (make-procedure-app-key-set! o::make-procedure-app v::obj) (with-access::make-procedure-app o (key) (set! key v)))
(define-inline (make-procedure-app-side-effect::obj o::make-procedure-app) (with-access::make-procedure-app o (side-effect) side-effect))
(define-inline (make-procedure-app-side-effect-set! o::make-procedure-app v::obj) (with-access::make-procedure-app o (side-effect) (set! side-effect v)))
(define-inline (make-procedure-app-type::type o::make-procedure-app) (with-access::make-procedure-app o (type) type))
(define-inline (make-procedure-app-type-set! o::make-procedure-app v::type) (with-access::make-procedure-app o (type) (set! type v)))
(define-inline (make-procedure-app-loc::obj o::make-procedure-app) (with-access::make-procedure-app o (loc) loc))
(define-inline (make-procedure-app-loc-set! o::make-procedure-app v::obj) (with-access::make-procedure-app o (loc) (set! loc v)))

;; procedure-ref-app
(define-inline (make-procedure-ref-app::procedure-ref-app loc1629::obj type1630::type side-effect1631::obj key1632::obj fun1633::var args1634::obj approx1635::approx) (instantiate::procedure-ref-app (loc loc1629) (type type1630) (side-effect side-effect1631) (key key1632) (fun fun1633) (args args1634) (approx approx1635)))
(define-inline (procedure-ref-app?::bool obj::obj) ((@ isa? __object) obj (@ procedure-ref-app cfa_info2)))
(define (procedure-ref-app-nil::procedure-ref-app) (class-nil (@ procedure-ref-app cfa_info2)))
(define-inline (procedure-ref-app-approx::approx o::procedure-ref-app) (with-access::procedure-ref-app o (approx) approx))
(define-inline (procedure-ref-app-approx-set! o::procedure-ref-app v::approx) (with-access::procedure-ref-app o (approx) (set! approx v)))
(define-inline (procedure-ref-app-args::obj o::procedure-ref-app) (with-access::procedure-ref-app o (args) args))
(define-inline (procedure-ref-app-args-set! o::procedure-ref-app v::obj) (with-access::procedure-ref-app o (args) (set! args v)))
(define-inline (procedure-ref-app-fun::var o::procedure-ref-app) (with-access::procedure-ref-app o (fun) fun))
(define-inline (procedure-ref-app-fun-set! o::procedure-ref-app v::var) (with-access::procedure-ref-app o (fun) (set! fun v)))
(define-inline (procedure-ref-app-key::obj o::procedure-ref-app) (with-access::procedure-ref-app o (key) key))
(define-inline (procedure-ref-app-key-set! o::procedure-ref-app v::obj) (with-access::procedure-ref-app o (key) (set! key v)))
(define-inline (procedure-ref-app-side-effect::obj o::procedure-ref-app) (with-access::procedure-ref-app o (side-effect) side-effect))
(define-inline (procedure-ref-app-side-effect-set! o::procedure-ref-app v::obj) (with-access::procedure-ref-app o (side-effect) (set! side-effect v)))
(define-inline (procedure-ref-app-type::type o::procedure-ref-app) (with-access::procedure-ref-app o (type) type))
(define-inline (procedure-ref-app-type-set! o::procedure-ref-app v::type) (with-access::procedure-ref-app o (type) (set! type v)))
(define-inline (procedure-ref-app-loc::obj o::procedure-ref-app) (with-access::procedure-ref-app o (loc) loc))
(define-inline (procedure-ref-app-loc-set! o::procedure-ref-app v::obj) (with-access::procedure-ref-app o (loc) (set! loc v)))

;; procedure-set!-app
(define-inline (make-procedure-set!-app::procedure-set!-app loc1620::obj type1621::type side-effect1622::obj key1623::obj fun1624::var args1625::obj approx1626::approx vapprox1627::obj) (instantiate::procedure-set!-app (loc loc1620) (type type1621) (side-effect side-effect1622) (key key1623) (fun fun1624) (args args1625) (approx approx1626) (vapprox vapprox1627)))
(define-inline (procedure-set!-app?::bool obj::obj) ((@ isa? __object) obj (@ procedure-set!-app cfa_info2)))
(define (procedure-set!-app-nil::procedure-set!-app) (class-nil (@ procedure-set!-app cfa_info2)))
(define-inline (procedure-set!-app-vapprox::obj o::procedure-set!-app) (with-access::procedure-set!-app o (vapprox) vapprox))
(define-inline (procedure-set!-app-vapprox-set! o::procedure-set!-app v::obj) (with-access::procedure-set!-app o (vapprox) (set! vapprox v)))
(define-inline (procedure-set!-app-approx::approx o::procedure-set!-app) (with-access::procedure-set!-app o (approx) approx))
(define-inline (procedure-set!-app-approx-set! o::procedure-set!-app v::approx) (with-access::procedure-set!-app o (approx) (set! approx v)))
(define-inline (procedure-set!-app-args::obj o::procedure-set!-app) (with-access::procedure-set!-app o (args) args))
(define-inline (procedure-set!-app-args-set! o::procedure-set!-app v::obj) (with-access::procedure-set!-app o (args) (set! args v)))
(define-inline (procedure-set!-app-fun::var o::procedure-set!-app) (with-access::procedure-set!-app o (fun) fun))
(define-inline (procedure-set!-app-fun-set! o::procedure-set!-app v::var) (with-access::procedure-set!-app o (fun) (set! fun v)))
(define-inline (procedure-set!-app-key::obj o::procedure-set!-app) (with-access::procedure-set!-app o (key) key))
(define-inline (procedure-set!-app-key-set! o::procedure-set!-app v::obj) (with-access::procedure-set!-app o (key) (set! key v)))
(define-inline (procedure-set!-app-side-effect::obj o::procedure-set!-app) (with-access::procedure-set!-app o (side-effect) side-effect))
(define-inline (procedure-set!-app-side-effect-set! o::procedure-set!-app v::obj) (with-access::procedure-set!-app o (side-effect) (set! side-effect v)))
(define-inline (procedure-set!-app-type::type o::procedure-set!-app) (with-access::procedure-set!-app o (type) type))
(define-inline (procedure-set!-app-type-set! o::procedure-set!-app v::type) (with-access::procedure-set!-app o (type) (set! type v)))
(define-inline (procedure-set!-app-loc::obj o::procedure-set!-app) (with-access::procedure-set!-app o (loc) loc))
(define-inline (procedure-set!-app-loc-set! o::procedure-set!-app v::obj) (with-access::procedure-set!-app o (loc) (set! loc v)))

;; pre-make-vector-app
(define-inline (make-pre-make-vector-app::pre-make-vector-app loc1611::obj type1612::type side-effect1613::obj key1614::obj fun1615::var args1616::obj owner1617::variable) (instantiate::pre-make-vector-app (loc loc1611) (type type1612) (side-effect side-effect1613) (key key1614) (fun fun1615) (args args1616) (owner owner1617)))
(define-inline (pre-make-vector-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-make-vector-app cfa_info2)))
(define (pre-make-vector-app-nil::pre-make-vector-app) (class-nil (@ pre-make-vector-app cfa_info2)))
(define-inline (pre-make-vector-app-owner::variable o::pre-make-vector-app) (with-access::pre-make-vector-app o (owner) owner))
(define-inline (pre-make-vector-app-owner-set! o::pre-make-vector-app v::variable) (with-access::pre-make-vector-app o (owner) (set! owner v)))
(define-inline (pre-make-vector-app-args::obj o::pre-make-vector-app) (with-access::pre-make-vector-app o (args) args))
(define-inline (pre-make-vector-app-args-set! o::pre-make-vector-app v::obj) (with-access::pre-make-vector-app o (args) (set! args v)))
(define-inline (pre-make-vector-app-fun::var o::pre-make-vector-app) (with-access::pre-make-vector-app o (fun) fun))
(define-inline (pre-make-vector-app-fun-set! o::pre-make-vector-app v::var) (with-access::pre-make-vector-app o (fun) (set! fun v)))
(define-inline (pre-make-vector-app-key::obj o::pre-make-vector-app) (with-access::pre-make-vector-app o (key) key))
(define-inline (pre-make-vector-app-key-set! o::pre-make-vector-app v::obj) (with-access::pre-make-vector-app o (key) (set! key v)))
(define-inline (pre-make-vector-app-side-effect::obj o::pre-make-vector-app) (with-access::pre-make-vector-app o (side-effect) side-effect))
(define-inline (pre-make-vector-app-side-effect-set! o::pre-make-vector-app v::obj) (with-access::pre-make-vector-app o (side-effect) (set! side-effect v)))
(define-inline (pre-make-vector-app-type::type o::pre-make-vector-app) (with-access::pre-make-vector-app o (type) type))
(define-inline (pre-make-vector-app-type-set! o::pre-make-vector-app v::type) (with-access::pre-make-vector-app o (type) (set! type v)))
(define-inline (pre-make-vector-app-loc::obj o::pre-make-vector-app) (with-access::pre-make-vector-app o (loc) loc))
(define-inline (pre-make-vector-app-loc-set! o::pre-make-vector-app v::obj) (with-access::pre-make-vector-app o (loc) (set! loc v)))

;; make-vector-app
(define-inline (make-make-vector-app::make-vector-app loc1598::obj type1599::type side-effect1600::obj key1601::obj fun1602::var args1603::obj approx1604::approx value-approx1605::approx lost-stamp1606::long owner1607::variable stack-stamp1608::obj seen?1609::bool) (instantiate::make-vector-app (loc loc1598) (type type1599) (side-effect side-effect1600) (key key1601) (fun fun1602) (args args1603) (approx approx1604) (value-approx value-approx1605) (lost-stamp lost-stamp1606) (owner owner1607) (stack-stamp stack-stamp1608) (seen? seen?1609)))
(define-inline (make-vector-app?::bool obj::obj) ((@ isa? __object) obj (@ make-vector-app cfa_info2)))
(define (make-vector-app-nil::make-vector-app) (class-nil (@ make-vector-app cfa_info2)))
(define-inline (make-vector-app-seen?::bool o::make-vector-app) (with-access::make-vector-app o (seen?) seen?))
(define-inline (make-vector-app-seen?-set! o::make-vector-app v::bool) (with-access::make-vector-app o (seen?) (set! seen? v)))
(define-inline (make-vector-app-stack-stamp::obj o::make-vector-app) (with-access::make-vector-app o (stack-stamp) stack-stamp))
(define-inline (make-vector-app-stack-stamp-set! o::make-vector-app v::obj) (with-access::make-vector-app o (stack-stamp) (set! stack-stamp v)))
(define-inline (make-vector-app-owner::variable o::make-vector-app) (with-access::make-vector-app o (owner) owner))
(define-inline (make-vector-app-owner-set! o::make-vector-app v::variable) (with-access::make-vector-app o (owner) (set! owner v)))
(define-inline (make-vector-app-lost-stamp::long o::make-vector-app) (with-access::make-vector-app o (lost-stamp) lost-stamp))
(define-inline (make-vector-app-lost-stamp-set! o::make-vector-app v::long) (with-access::make-vector-app o (lost-stamp) (set! lost-stamp v)))
(define-inline (make-vector-app-value-approx::approx o::make-vector-app) (with-access::make-vector-app o (value-approx) value-approx))
(define-inline (make-vector-app-value-approx-set! o::make-vector-app v::approx) (with-access::make-vector-app o (value-approx) (set! value-approx v)))
(define-inline (make-vector-app-approx::approx o::make-vector-app) (with-access::make-vector-app o (approx) approx))
(define-inline (make-vector-app-approx-set! o::make-vector-app v::approx) (with-access::make-vector-app o (approx) (set! approx v)))
(define-inline (make-vector-app-args::obj o::make-vector-app) (with-access::make-vector-app o (args) args))
(define-inline (make-vector-app-args-set! o::make-vector-app v::obj) (with-access::make-vector-app o (args) (set! args v)))
(define-inline (make-vector-app-fun::var o::make-vector-app) (with-access::make-vector-app o (fun) fun))
(define-inline (make-vector-app-fun-set! o::make-vector-app v::var) (with-access::make-vector-app o (fun) (set! fun v)))
(define-inline (make-vector-app-key::obj o::make-vector-app) (with-access::make-vector-app o (key) key))
(define-inline (make-vector-app-key-set! o::make-vector-app v::obj) (with-access::make-vector-app o (key) (set! key v)))
(define-inline (make-vector-app-side-effect::obj o::make-vector-app) (with-access::make-vector-app o (side-effect) side-effect))
(define-inline (make-vector-app-side-effect-set! o::make-vector-app v::obj) (with-access::make-vector-app o (side-effect) (set! side-effect v)))
(define-inline (make-vector-app-type::type o::make-vector-app) (with-access::make-vector-app o (type) type))
(define-inline (make-vector-app-type-set! o::make-vector-app v::type) (with-access::make-vector-app o (type) (set! type v)))
(define-inline (make-vector-app-loc::obj o::make-vector-app) (with-access::make-vector-app o (loc) loc))
(define-inline (make-vector-app-loc-set! o::make-vector-app v::obj) (with-access::make-vector-app o (loc) (set! loc v)))

;; pre-cons-app
(define-inline (make-pre-cons-app::pre-cons-app loc1589::obj type1590::type side-effect1591::obj key1592::obj fun1593::var args1594::obj owner1595::variable) (instantiate::pre-cons-app (loc loc1589) (type type1590) (side-effect side-effect1591) (key key1592) (fun fun1593) (args args1594) (owner owner1595)))
(define-inline (pre-cons-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-cons-app cfa_info2)))
(define (pre-cons-app-nil::pre-cons-app) (class-nil (@ pre-cons-app cfa_info2)))
(define-inline (pre-cons-app-owner::variable o::pre-cons-app) (with-access::pre-cons-app o (owner) owner))
(define-inline (pre-cons-app-owner-set! o::pre-cons-app v::variable) (with-access::pre-cons-app o (owner) (set! owner v)))
(define-inline (pre-cons-app-args::obj o::pre-cons-app) (with-access::pre-cons-app o (args) args))
(define-inline (pre-cons-app-args-set! o::pre-cons-app v::obj) (with-access::pre-cons-app o (args) (set! args v)))
(define-inline (pre-cons-app-fun::var o::pre-cons-app) (with-access::pre-cons-app o (fun) fun))
(define-inline (pre-cons-app-fun-set! o::pre-cons-app v::var) (with-access::pre-cons-app o (fun) (set! fun v)))
(define-inline (pre-cons-app-key::obj o::pre-cons-app) (with-access::pre-cons-app o (key) key))
(define-inline (pre-cons-app-key-set! o::pre-cons-app v::obj) (with-access::pre-cons-app o (key) (set! key v)))
(define-inline (pre-cons-app-side-effect::obj o::pre-cons-app) (with-access::pre-cons-app o (side-effect) side-effect))
(define-inline (pre-cons-app-side-effect-set! o::pre-cons-app v::obj) (with-access::pre-cons-app o (side-effect) (set! side-effect v)))
(define-inline (pre-cons-app-type::type o::pre-cons-app) (with-access::pre-cons-app o (type) type))
(define-inline (pre-cons-app-type-set! o::pre-cons-app v::type) (with-access::pre-cons-app o (type) (set! type v)))
(define-inline (pre-cons-app-loc::obj o::pre-cons-app) (with-access::pre-cons-app o (loc) loc))
(define-inline (pre-cons-app-loc-set! o::pre-cons-app v::obj) (with-access::pre-cons-app o (loc) (set! loc v)))

;; pre-cons-ref-app
(define-inline (make-pre-cons-ref-app::pre-cons-ref-app loc1581::obj type1582::type side-effect1583::obj key1584::obj fun1585::var args1586::obj get1587::procedure) (instantiate::pre-cons-ref-app (loc loc1581) (type type1582) (side-effect side-effect1583) (key key1584) (fun fun1585) (args args1586) (get get1587)))
(define-inline (pre-cons-ref-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-cons-ref-app cfa_info2)))
(define (pre-cons-ref-app-nil::pre-cons-ref-app) (class-nil (@ pre-cons-ref-app cfa_info2)))
(define-inline (pre-cons-ref-app-get::procedure o::pre-cons-ref-app) (with-access::pre-cons-ref-app o (get) get))
(define-inline (pre-cons-ref-app-get-set! o::pre-cons-ref-app v::procedure) (with-access::pre-cons-ref-app o (get) (set! get v)))
(define-inline (pre-cons-ref-app-args::obj o::pre-cons-ref-app) (with-access::pre-cons-ref-app o (args) args))
(define-inline (pre-cons-ref-app-args-set! o::pre-cons-ref-app v::obj) (with-access::pre-cons-ref-app o (args) (set! args v)))
(define-inline (pre-cons-ref-app-fun::var o::pre-cons-ref-app) (with-access::pre-cons-ref-app o (fun) fun))
(define-inline (pre-cons-ref-app-fun-set! o::pre-cons-ref-app v::var) (with-access::pre-cons-ref-app o (fun) (set! fun v)))
(define-inline (pre-cons-ref-app-key::obj o::pre-cons-ref-app) (with-access::pre-cons-ref-app o (key) key))
(define-inline (pre-cons-ref-app-key-set! o::pre-cons-ref-app v::obj) (with-access::pre-cons-ref-app o (key) (set! key v)))
(define-inline (pre-cons-ref-app-side-effect::obj o::pre-cons-ref-app) (with-access::pre-cons-ref-app o (side-effect) side-effect))
(define-inline (pre-cons-ref-app-side-effect-set! o::pre-cons-ref-app v::obj) (with-access::pre-cons-ref-app o (side-effect) (set! side-effect v)))
(define-inline (pre-cons-ref-app-type::type o::pre-cons-ref-app) (with-access::pre-cons-ref-app o (type) type))
(define-inline (pre-cons-ref-app-type-set! o::pre-cons-ref-app v::type) (with-access::pre-cons-ref-app o (type) (set! type v)))
(define-inline (pre-cons-ref-app-loc::obj o::pre-cons-ref-app) (with-access::pre-cons-ref-app o (loc) loc))
(define-inline (pre-cons-ref-app-loc-set! o::pre-cons-ref-app v::obj) (with-access::pre-cons-ref-app o (loc) (set! loc v)))

;; pre-cons-set!-app
(define-inline (make-pre-cons-set!-app::pre-cons-set!-app loc1571::obj type1572::type side-effect1573::obj key1574::obj fun1576::var args1577::obj get1578::procedure) (instantiate::pre-cons-set!-app (loc loc1571) (type type1572) (side-effect side-effect1573) (key key1574) (fun fun1576) (args args1577) (get get1578)))
(define-inline (pre-cons-set!-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-cons-set!-app cfa_info2)))
(define (pre-cons-set!-app-nil::pre-cons-set!-app) (class-nil (@ pre-cons-set!-app cfa_info2)))
(define-inline (pre-cons-set!-app-get::procedure o::pre-cons-set!-app) (with-access::pre-cons-set!-app o (get) get))
(define-inline (pre-cons-set!-app-get-set! o::pre-cons-set!-app v::procedure) (with-access::pre-cons-set!-app o (get) (set! get v)))
(define-inline (pre-cons-set!-app-args::obj o::pre-cons-set!-app) (with-access::pre-cons-set!-app o (args) args))
(define-inline (pre-cons-set!-app-args-set! o::pre-cons-set!-app v::obj) (with-access::pre-cons-set!-app o (args) (set! args v)))
(define-inline (pre-cons-set!-app-fun::var o::pre-cons-set!-app) (with-access::pre-cons-set!-app o (fun) fun))
(define-inline (pre-cons-set!-app-fun-set! o::pre-cons-set!-app v::var) (with-access::pre-cons-set!-app o (fun) (set! fun v)))
(define-inline (pre-cons-set!-app-key::obj o::pre-cons-set!-app) (with-access::pre-cons-set!-app o (key) key))
(define-inline (pre-cons-set!-app-key-set! o::pre-cons-set!-app v::obj) (with-access::pre-cons-set!-app o (key) (set! key v)))
(define-inline (pre-cons-set!-app-side-effect::obj o::pre-cons-set!-app) (with-access::pre-cons-set!-app o (side-effect) side-effect))
(define-inline (pre-cons-set!-app-side-effect-set! o::pre-cons-set!-app v::obj) (with-access::pre-cons-set!-app o (side-effect) (set! side-effect v)))
(define-inline (pre-cons-set!-app-type::type o::pre-cons-set!-app) (with-access::pre-cons-set!-app o (type) type))
(define-inline (pre-cons-set!-app-type-set! o::pre-cons-set!-app v::type) (with-access::pre-cons-set!-app o (type) (set! type v)))
(define-inline (pre-cons-set!-app-loc::obj o::pre-cons-set!-app) (with-access::pre-cons-set!-app o (loc) loc))
(define-inline (pre-cons-set!-app-loc-set! o::pre-cons-set!-app v::obj) (with-access::pre-cons-set!-app o (loc) (set! loc v)))

;; cons-app
(define-inline (make-cons-app::cons-app loc1556::obj type1557::type side-effect1558::obj key1559::obj fun1560::var args1561::obj approx1562::approx approxes1563::pair lost-stamp1564::long owner1565::variable stack-stamp1566::obj seen?1567::bool) (instantiate::cons-app (loc loc1556) (type type1557) (side-effect side-effect1558) (key key1559) (fun fun1560) (args args1561) (approx approx1562) (approxes approxes1563) (lost-stamp lost-stamp1564) (owner owner1565) (stack-stamp stack-stamp1566) (seen? seen?1567)))
(define-inline (cons-app?::bool obj::obj) ((@ isa? __object) obj (@ cons-app cfa_info2)))
(define (cons-app-nil::cons-app) (class-nil (@ cons-app cfa_info2)))
(define-inline (cons-app-seen?::bool o::cons-app) (with-access::cons-app o (seen?) seen?))
(define-inline (cons-app-seen?-set! o::cons-app v::bool) (with-access::cons-app o (seen?) (set! seen? v)))
(define-inline (cons-app-stack-stamp::obj o::cons-app) (with-access::cons-app o (stack-stamp) stack-stamp))
(define-inline (cons-app-stack-stamp-set! o::cons-app v::obj) (with-access::cons-app o (stack-stamp) (set! stack-stamp v)))
(define-inline (cons-app-owner::variable o::cons-app) (with-access::cons-app o (owner) owner))
(define-inline (cons-app-owner-set! o::cons-app v::variable) (with-access::cons-app o (owner) (set! owner v)))
(define-inline (cons-app-lost-stamp::long o::cons-app) (with-access::cons-app o (lost-stamp) lost-stamp))
(define-inline (cons-app-lost-stamp-set! o::cons-app v::long) (with-access::cons-app o (lost-stamp) (set! lost-stamp v)))
(define-inline (cons-app-approxes::pair o::cons-app) (with-access::cons-app o (approxes) approxes))
(define-inline (cons-app-approxes-set! o::cons-app v::pair) (with-access::cons-app o (approxes) (set! approxes v)))
(define-inline (cons-app-approx::approx o::cons-app) (with-access::cons-app o (approx) approx))
(define-inline (cons-app-approx-set! o::cons-app v::approx) (with-access::cons-app o (approx) (set! approx v)))
(define-inline (cons-app-args::obj o::cons-app) (with-access::cons-app o (args) args))
(define-inline (cons-app-args-set! o::cons-app v::obj) (with-access::cons-app o (args) (set! args v)))
(define-inline (cons-app-fun::var o::cons-app) (with-access::cons-app o (fun) fun))
(define-inline (cons-app-fun-set! o::cons-app v::var) (with-access::cons-app o (fun) (set! fun v)))
(define-inline (cons-app-key::obj o::cons-app) (with-access::cons-app o (key) key))
(define-inline (cons-app-key-set! o::cons-app v::obj) (with-access::cons-app o (key) (set! key v)))
(define-inline (cons-app-side-effect::obj o::cons-app) (with-access::cons-app o (side-effect) side-effect))
(define-inline (cons-app-side-effect-set! o::cons-app v::obj) (with-access::cons-app o (side-effect) (set! side-effect v)))
(define-inline (cons-app-type::type o::cons-app) (with-access::cons-app o (type) type))
(define-inline (cons-app-type-set! o::cons-app v::type) (with-access::cons-app o (type) (set! type v)))
(define-inline (cons-app-loc::obj o::cons-app) (with-access::cons-app o (loc) loc))
(define-inline (cons-app-loc-set! o::cons-app v::obj) (with-access::cons-app o (loc) (set! loc v)))

;; cons-ref-app
(define-inline (make-cons-ref-app::cons-ref-app loc1547::obj type1548::type side-effect1549::obj key1550::obj fun1551::var args1552::obj approx1553::approx get1554::procedure) (instantiate::cons-ref-app (loc loc1547) (type type1548) (side-effect side-effect1549) (key key1550) (fun fun1551) (args args1552) (approx approx1553) (get get1554)))
(define-inline (cons-ref-app?::bool obj::obj) ((@ isa? __object) obj (@ cons-ref-app cfa_info2)))
(define (cons-ref-app-nil::cons-ref-app) (class-nil (@ cons-ref-app cfa_info2)))
(define-inline (cons-ref-app-get::procedure o::cons-ref-app) (with-access::cons-ref-app o (get) get))
(define-inline (cons-ref-app-get-set! o::cons-ref-app v::procedure) (with-access::cons-ref-app o (get) (set! get v)))
(define-inline (cons-ref-app-approx::approx o::cons-ref-app) (with-access::cons-ref-app o (approx) approx))
(define-inline (cons-ref-app-approx-set! o::cons-ref-app v::approx) (with-access::cons-ref-app o (approx) (set! approx v)))
(define-inline (cons-ref-app-args::obj o::cons-ref-app) (with-access::cons-ref-app o (args) args))
(define-inline (cons-ref-app-args-set! o::cons-ref-app v::obj) (with-access::cons-ref-app o (args) (set! args v)))
(define-inline (cons-ref-app-fun::var o::cons-ref-app) (with-access::cons-ref-app o (fun) fun))
(define-inline (cons-ref-app-fun-set! o::cons-ref-app v::var) (with-access::cons-ref-app o (fun) (set! fun v)))
(define-inline (cons-ref-app-key::obj o::cons-ref-app) (with-access::cons-ref-app o (key) key))
(define-inline (cons-ref-app-key-set! o::cons-ref-app v::obj) (with-access::cons-ref-app o (key) (set! key v)))
(define-inline (cons-ref-app-side-effect::obj o::cons-ref-app) (with-access::cons-ref-app o (side-effect) side-effect))
(define-inline (cons-ref-app-side-effect-set! o::cons-ref-app v::obj) (with-access::cons-ref-app o (side-effect) (set! side-effect v)))
(define-inline (cons-ref-app-type::type o::cons-ref-app) (with-access::cons-ref-app o (type) type))
(define-inline (cons-ref-app-type-set! o::cons-ref-app v::type) (with-access::cons-ref-app o (type) (set! type v)))
(define-inline (cons-ref-app-loc::obj o::cons-ref-app) (with-access::cons-ref-app o (loc) loc))
(define-inline (cons-ref-app-loc-set! o::cons-ref-app v::obj) (with-access::cons-ref-app o (loc) (set! loc v)))

;; cons-set!-app
(define-inline (make-cons-set!-app::cons-set!-app loc1537::obj type1538::type side-effect1539::obj key1540::obj fun1542::var args1543::obj approx1544::approx get1545::procedure) (instantiate::cons-set!-app (loc loc1537) (type type1538) (side-effect side-effect1539) (key key1540) (fun fun1542) (args args1543) (approx approx1544) (get get1545)))
(define-inline (cons-set!-app?::bool obj::obj) ((@ isa? __object) obj (@ cons-set!-app cfa_info2)))
(define (cons-set!-app-nil::cons-set!-app) (class-nil (@ cons-set!-app cfa_info2)))
(define-inline (cons-set!-app-get::procedure o::cons-set!-app) (with-access::cons-set!-app o (get) get))
(define-inline (cons-set!-app-get-set! o::cons-set!-app v::procedure) (with-access::cons-set!-app o (get) (set! get v)))
(define-inline (cons-set!-app-approx::approx o::cons-set!-app) (with-access::cons-set!-app o (approx) approx))
(define-inline (cons-set!-app-approx-set! o::cons-set!-app v::approx) (with-access::cons-set!-app o (approx) (set! approx v)))
(define-inline (cons-set!-app-args::obj o::cons-set!-app) (with-access::cons-set!-app o (args) args))
(define-inline (cons-set!-app-args-set! o::cons-set!-app v::obj) (with-access::cons-set!-app o (args) (set! args v)))
(define-inline (cons-set!-app-fun::var o::cons-set!-app) (with-access::cons-set!-app o (fun) fun))
(define-inline (cons-set!-app-fun-set! o::cons-set!-app v::var) (with-access::cons-set!-app o (fun) (set! fun v)))
(define-inline (cons-set!-app-key::obj o::cons-set!-app) (with-access::cons-set!-app o (key) key))
(define-inline (cons-set!-app-key-set! o::cons-set!-app v::obj) (with-access::cons-set!-app o (key) (set! key v)))
(define-inline (cons-set!-app-side-effect::obj o::cons-set!-app) (with-access::cons-set!-app o (side-effect) side-effect))
(define-inline (cons-set!-app-side-effect-set! o::cons-set!-app v::obj) (with-access::cons-set!-app o (side-effect) (set! side-effect v)))
(define-inline (cons-set!-app-type::type o::cons-set!-app) (with-access::cons-set!-app o (type) type))
(define-inline (cons-set!-app-type-set! o::cons-set!-app v::type) (with-access::cons-set!-app o (type) (set! type v)))
(define-inline (cons-set!-app-loc::obj o::cons-set!-app) (with-access::cons-set!-app o (loc) loc))
(define-inline (cons-set!-app-loc-set! o::cons-set!-app v::obj) (with-access::cons-set!-app o (loc) (set! loc v)))

;; pre-make-struct-app
(define-inline (make-pre-make-struct-app::pre-make-struct-app loc1529::obj type1530::type side-effect1531::obj key1532::obj fun1533::var args1534::obj owner1535::variable) (instantiate::pre-make-struct-app (loc loc1529) (type type1530) (side-effect side-effect1531) (key key1532) (fun fun1533) (args args1534) (owner owner1535)))
(define-inline (pre-make-struct-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-make-struct-app cfa_info2)))
(define (pre-make-struct-app-nil::pre-make-struct-app) (class-nil (@ pre-make-struct-app cfa_info2)))
(define-inline (pre-make-struct-app-owner::variable o::pre-make-struct-app) (with-access::pre-make-struct-app o (owner) owner))
(define-inline (pre-make-struct-app-owner-set! o::pre-make-struct-app v::variable) (with-access::pre-make-struct-app o (owner) (set! owner v)))
(define-inline (pre-make-struct-app-args::obj o::pre-make-struct-app) (with-access::pre-make-struct-app o (args) args))
(define-inline (pre-make-struct-app-args-set! o::pre-make-struct-app v::obj) (with-access::pre-make-struct-app o (args) (set! args v)))
(define-inline (pre-make-struct-app-fun::var o::pre-make-struct-app) (with-access::pre-make-struct-app o (fun) fun))
(define-inline (pre-make-struct-app-fun-set! o::pre-make-struct-app v::var) (with-access::pre-make-struct-app o (fun) (set! fun v)))
(define-inline (pre-make-struct-app-key::obj o::pre-make-struct-app) (with-access::pre-make-struct-app o (key) key))
(define-inline (pre-make-struct-app-key-set! o::pre-make-struct-app v::obj) (with-access::pre-make-struct-app o (key) (set! key v)))
(define-inline (pre-make-struct-app-side-effect::obj o::pre-make-struct-app) (with-access::pre-make-struct-app o (side-effect) side-effect))
(define-inline (pre-make-struct-app-side-effect-set! o::pre-make-struct-app v::obj) (with-access::pre-make-struct-app o (side-effect) (set! side-effect v)))
(define-inline (pre-make-struct-app-type::type o::pre-make-struct-app) (with-access::pre-make-struct-app o (type) type))
(define-inline (pre-make-struct-app-type-set! o::pre-make-struct-app v::type) (with-access::pre-make-struct-app o (type) (set! type v)))
(define-inline (pre-make-struct-app-loc::obj o::pre-make-struct-app) (with-access::pre-make-struct-app o (loc) loc))
(define-inline (pre-make-struct-app-loc-set! o::pre-make-struct-app v::obj) (with-access::pre-make-struct-app o (loc) (set! loc v)))

;; pre-struct-ref-app
(define-inline (make-pre-struct-ref-app::pre-struct-ref-app loc1521::obj type1522::type side-effect1523::obj key1524::obj fun1525::var args1526::obj) (instantiate::pre-struct-ref-app (loc loc1521) (type type1522) (side-effect side-effect1523) (key key1524) (fun fun1525) (args args1526)))
(define-inline (pre-struct-ref-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-struct-ref-app cfa_info2)))
(define (pre-struct-ref-app-nil::pre-struct-ref-app) (class-nil (@ pre-struct-ref-app cfa_info2)))
(define-inline (pre-struct-ref-app-args::obj o::pre-struct-ref-app) (with-access::pre-struct-ref-app o (args) args))
(define-inline (pre-struct-ref-app-args-set! o::pre-struct-ref-app v::obj) (with-access::pre-struct-ref-app o (args) (set! args v)))
(define-inline (pre-struct-ref-app-fun::var o::pre-struct-ref-app) (with-access::pre-struct-ref-app o (fun) fun))
(define-inline (pre-struct-ref-app-fun-set! o::pre-struct-ref-app v::var) (with-access::pre-struct-ref-app o (fun) (set! fun v)))
(define-inline (pre-struct-ref-app-key::obj o::pre-struct-ref-app) (with-access::pre-struct-ref-app o (key) key))
(define-inline (pre-struct-ref-app-key-set! o::pre-struct-ref-app v::obj) (with-access::pre-struct-ref-app o (key) (set! key v)))
(define-inline (pre-struct-ref-app-side-effect::obj o::pre-struct-ref-app) (with-access::pre-struct-ref-app o (side-effect) side-effect))
(define-inline (pre-struct-ref-app-side-effect-set! o::pre-struct-ref-app v::obj) (with-access::pre-struct-ref-app o (side-effect) (set! side-effect v)))
(define-inline (pre-struct-ref-app-type::type o::pre-struct-ref-app) (with-access::pre-struct-ref-app o (type) type))
(define-inline (pre-struct-ref-app-type-set! o::pre-struct-ref-app v::type) (with-access::pre-struct-ref-app o (type) (set! type v)))
(define-inline (pre-struct-ref-app-loc::obj o::pre-struct-ref-app) (with-access::pre-struct-ref-app o (loc) loc))
(define-inline (pre-struct-ref-app-loc-set! o::pre-struct-ref-app v::obj) (with-access::pre-struct-ref-app o (loc) (set! loc v)))

;; pre-struct-set!-app
(define-inline (make-pre-struct-set!-app::pre-struct-set!-app loc1514::obj type1515::type side-effect1516::obj key1517::obj fun1518::var args1519::obj) (instantiate::pre-struct-set!-app (loc loc1514) (type type1515) (side-effect side-effect1516) (key key1517) (fun fun1518) (args args1519)))
(define-inline (pre-struct-set!-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-struct-set!-app cfa_info2)))
(define (pre-struct-set!-app-nil::pre-struct-set!-app) (class-nil (@ pre-struct-set!-app cfa_info2)))
(define-inline (pre-struct-set!-app-args::obj o::pre-struct-set!-app) (with-access::pre-struct-set!-app o (args) args))
(define-inline (pre-struct-set!-app-args-set! o::pre-struct-set!-app v::obj) (with-access::pre-struct-set!-app o (args) (set! args v)))
(define-inline (pre-struct-set!-app-fun::var o::pre-struct-set!-app) (with-access::pre-struct-set!-app o (fun) fun))
(define-inline (pre-struct-set!-app-fun-set! o::pre-struct-set!-app v::var) (with-access::pre-struct-set!-app o (fun) (set! fun v)))
(define-inline (pre-struct-set!-app-key::obj o::pre-struct-set!-app) (with-access::pre-struct-set!-app o (key) key))
(define-inline (pre-struct-set!-app-key-set! o::pre-struct-set!-app v::obj) (with-access::pre-struct-set!-app o (key) (set! key v)))
(define-inline (pre-struct-set!-app-side-effect::obj o::pre-struct-set!-app) (with-access::pre-struct-set!-app o (side-effect) side-effect))
(define-inline (pre-struct-set!-app-side-effect-set! o::pre-struct-set!-app v::obj) (with-access::pre-struct-set!-app o (side-effect) (set! side-effect v)))
(define-inline (pre-struct-set!-app-type::type o::pre-struct-set!-app) (with-access::pre-struct-set!-app o (type) type))
(define-inline (pre-struct-set!-app-type-set! o::pre-struct-set!-app v::type) (with-access::pre-struct-set!-app o (type) (set! type v)))
(define-inline (pre-struct-set!-app-loc::obj o::pre-struct-set!-app) (with-access::pre-struct-set!-app o (loc) loc))
(define-inline (pre-struct-set!-app-loc-set! o::pre-struct-set!-app v::obj) (with-access::pre-struct-set!-app o (loc) (set! loc v)))

;; make-struct-app
(define-inline (make-make-struct-app::make-struct-app loc1502::obj type1503::type side-effect1504::obj key1505::obj fun1506::var args1507::obj approx1508::approx value-approx1509::approx lost-stamp1510::long owner1511::variable stack-stamp1512::obj) (instantiate::make-struct-app (loc loc1502) (type type1503) (side-effect side-effect1504) (key key1505) (fun fun1506) (args args1507) (approx approx1508) (value-approx value-approx1509) (lost-stamp lost-stamp1510) (owner owner1511) (stack-stamp stack-stamp1512)))
(define-inline (make-struct-app?::bool obj::obj) ((@ isa? __object) obj (@ make-struct-app cfa_info2)))
(define (make-struct-app-nil::make-struct-app) (class-nil (@ make-struct-app cfa_info2)))
(define-inline (make-struct-app-stack-stamp::obj o::make-struct-app) (with-access::make-struct-app o (stack-stamp) stack-stamp))
(define-inline (make-struct-app-stack-stamp-set! o::make-struct-app v::obj) (with-access::make-struct-app o (stack-stamp) (set! stack-stamp v)))
(define-inline (make-struct-app-owner::variable o::make-struct-app) (with-access::make-struct-app o (owner) owner))
(define-inline (make-struct-app-owner-set! o::make-struct-app v::variable) (with-access::make-struct-app o (owner) (set! owner v)))
(define-inline (make-struct-app-lost-stamp::long o::make-struct-app) (with-access::make-struct-app o (lost-stamp) lost-stamp))
(define-inline (make-struct-app-lost-stamp-set! o::make-struct-app v::long) (with-access::make-struct-app o (lost-stamp) (set! lost-stamp v)))
(define-inline (make-struct-app-value-approx::approx o::make-struct-app) (with-access::make-struct-app o (value-approx) value-approx))
(define-inline (make-struct-app-value-approx-set! o::make-struct-app v::approx) (with-access::make-struct-app o (value-approx) (set! value-approx v)))
(define-inline (make-struct-app-approx::approx o::make-struct-app) (with-access::make-struct-app o (approx) approx))
(define-inline (make-struct-app-approx-set! o::make-struct-app v::approx) (with-access::make-struct-app o (approx) (set! approx v)))
(define-inline (make-struct-app-args::obj o::make-struct-app) (with-access::make-struct-app o (args) args))
(define-inline (make-struct-app-args-set! o::make-struct-app v::obj) (with-access::make-struct-app o (args) (set! args v)))
(define-inline (make-struct-app-fun::var o::make-struct-app) (with-access::make-struct-app o (fun) fun))
(define-inline (make-struct-app-fun-set! o::make-struct-app v::var) (with-access::make-struct-app o (fun) (set! fun v)))
(define-inline (make-struct-app-key::obj o::make-struct-app) (with-access::make-struct-app o (key) key))
(define-inline (make-struct-app-key-set! o::make-struct-app v::obj) (with-access::make-struct-app o (key) (set! key v)))
(define-inline (make-struct-app-side-effect::obj o::make-struct-app) (with-access::make-struct-app o (side-effect) side-effect))
(define-inline (make-struct-app-side-effect-set! o::make-struct-app v::obj) (with-access::make-struct-app o (side-effect) (set! side-effect v)))
(define-inline (make-struct-app-type::type o::make-struct-app) (with-access::make-struct-app o (type) type))
(define-inline (make-struct-app-type-set! o::make-struct-app v::type) (with-access::make-struct-app o (type) (set! type v)))
(define-inline (make-struct-app-loc::obj o::make-struct-app) (with-access::make-struct-app o (loc) loc))
(define-inline (make-struct-app-loc-set! o::make-struct-app v::obj) (with-access::make-struct-app o (loc) (set! loc v)))

;; struct-ref-app
(define-inline (make-struct-ref-app::struct-ref-app loc1494::obj type1495::type side-effect1496::obj key1497::obj fun1498::var args1499::obj approx1500::approx) (instantiate::struct-ref-app (loc loc1494) (type type1495) (side-effect side-effect1496) (key key1497) (fun fun1498) (args args1499) (approx approx1500)))
(define-inline (struct-ref-app?::bool obj::obj) ((@ isa? __object) obj (@ struct-ref-app cfa_info2)))
(define (struct-ref-app-nil::struct-ref-app) (class-nil (@ struct-ref-app cfa_info2)))
(define-inline (struct-ref-app-approx::approx o::struct-ref-app) (with-access::struct-ref-app o (approx) approx))
(define-inline (struct-ref-app-approx-set! o::struct-ref-app v::approx) (with-access::struct-ref-app o (approx) (set! approx v)))
(define-inline (struct-ref-app-args::obj o::struct-ref-app) (with-access::struct-ref-app o (args) args))
(define-inline (struct-ref-app-args-set! o::struct-ref-app v::obj) (with-access::struct-ref-app o (args) (set! args v)))
(define-inline (struct-ref-app-fun::var o::struct-ref-app) (with-access::struct-ref-app o (fun) fun))
(define-inline (struct-ref-app-fun-set! o::struct-ref-app v::var) (with-access::struct-ref-app o (fun) (set! fun v)))
(define-inline (struct-ref-app-key::obj o::struct-ref-app) (with-access::struct-ref-app o (key) key))
(define-inline (struct-ref-app-key-set! o::struct-ref-app v::obj) (with-access::struct-ref-app o (key) (set! key v)))
(define-inline (struct-ref-app-side-effect::obj o::struct-ref-app) (with-access::struct-ref-app o (side-effect) side-effect))
(define-inline (struct-ref-app-side-effect-set! o::struct-ref-app v::obj) (with-access::struct-ref-app o (side-effect) (set! side-effect v)))
(define-inline (struct-ref-app-type::type o::struct-ref-app) (with-access::struct-ref-app o (type) type))
(define-inline (struct-ref-app-type-set! o::struct-ref-app v::type) (with-access::struct-ref-app o (type) (set! type v)))
(define-inline (struct-ref-app-loc::obj o::struct-ref-app) (with-access::struct-ref-app o (loc) loc))
(define-inline (struct-ref-app-loc-set! o::struct-ref-app v::obj) (with-access::struct-ref-app o (loc) (set! loc v)))

;; struct-set!-app
(define-inline (make-struct-set!-app::struct-set!-app loc1486::obj type1487::type side-effect1488::obj key1489::obj fun1490::var args1491::obj approx1492::approx) (instantiate::struct-set!-app (loc loc1486) (type type1487) (side-effect side-effect1488) (key key1489) (fun fun1490) (args args1491) (approx approx1492)))
(define-inline (struct-set!-app?::bool obj::obj) ((@ isa? __object) obj (@ struct-set!-app cfa_info2)))
(define (struct-set!-app-nil::struct-set!-app) (class-nil (@ struct-set!-app cfa_info2)))
(define-inline (struct-set!-app-approx::approx o::struct-set!-app) (with-access::struct-set!-app o (approx) approx))
(define-inline (struct-set!-app-approx-set! o::struct-set!-app v::approx) (with-access::struct-set!-app o (approx) (set! approx v)))
(define-inline (struct-set!-app-args::obj o::struct-set!-app) (with-access::struct-set!-app o (args) args))
(define-inline (struct-set!-app-args-set! o::struct-set!-app v::obj) (with-access::struct-set!-app o (args) (set! args v)))
(define-inline (struct-set!-app-fun::var o::struct-set!-app) (with-access::struct-set!-app o (fun) fun))
(define-inline (struct-set!-app-fun-set! o::struct-set!-app v::var) (with-access::struct-set!-app o (fun) (set! fun v)))
(define-inline (struct-set!-app-key::obj o::struct-set!-app) (with-access::struct-set!-app o (key) key))
(define-inline (struct-set!-app-key-set! o::struct-set!-app v::obj) (with-access::struct-set!-app o (key) (set! key v)))
(define-inline (struct-set!-app-side-effect::obj o::struct-set!-app) (with-access::struct-set!-app o (side-effect) side-effect))
(define-inline (struct-set!-app-side-effect-set! o::struct-set!-app v::obj) (with-access::struct-set!-app o (side-effect) (set! side-effect v)))
(define-inline (struct-set!-app-type::type o::struct-set!-app) (with-access::struct-set!-app o (type) type))
(define-inline (struct-set!-app-type-set! o::struct-set!-app v::type) (with-access::struct-set!-app o (type) (set! type v)))
(define-inline (struct-set!-app-loc::obj o::struct-set!-app) (with-access::struct-set!-app o (loc) loc))
(define-inline (struct-set!-app-loc-set! o::struct-set!-app v::obj) (with-access::struct-set!-app o (loc) (set! loc v)))
))
