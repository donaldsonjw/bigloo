;*=====================================================================*/
;*    serrano/prgm/project/bigloo/examples/Lib/scm-point.scm           */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Sat Dec 19 13:03:45 1998                          */
;*    Last change :  Mon Apr 21 09:11:06 2008 (serrano)                */
;*    -------------------------------------------------------------    */
;*    The Scheme implementation of the point library                   */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module point
   (include "point.sch")
   (extern  (include "point.h"))
   (export  (make-point::s-point_2d* ::double ::double)
	    (print-point ::s-point_2d*)
	    (point? ::obj)
	    (inline point-car ::pair))
   (eval (export-all)))

;*---------------------------------------------------------------------*/
;*    point-car ...                                                    */
;*---------------------------------------------------------------------*/
(define-inline (point-car x)
   (car x))

;*---------------------------------------------------------------------*/
;*    make-point ...                                                   */
;*---------------------------------------------------------------------*/
(define (make-point::s-point_2d* x::double y::double)
   (s-point_2d* x y))

;*---------------------------------------------------------------------*/
;*    print-point ...                                                  */
;*---------------------------------------------------------------------*/
(define (print-point p::s-point_2d*)
   (print_point_2d p))

;*---------------------------------------------------------------------*/
;*    point? ...                                                       */
;*---------------------------------------------------------------------*/
(define (point? obj::obj)
   (s-point_2d*? obj)
   obj)
		 
